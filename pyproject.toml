[tool.poetry]
name = "moltencore"
version = "0.1.0"
description = ""
authors = ["Stax124 <tamoncz@gmail.com>"]

# Dependencies
[tool.poetry.dependencies]
python = "^3.10"
"discord.py" = "2.2.3"
discord-pretty-help = "^2.0.0"
DiscordUtils = "^1.3.4"
sqlmodel = "^0.0.6"
alembic = "^1.8.1"
psycopg2-binary = "^2.9.3"
fastapi = "^0.79.0"
uvicorn = "^0.18.2"
coloredlogs = "^15.0.1"
requests = "^2.28.1"
termcolor = "^1.1.0"
GitPython = "^3.1.27"
websockets = "^11.0"
wheel = "^0.40.0"
python-dotenv = "^0.21.0"

[tool.poetry.dev-dependencies]
black = "^23.3.0"
pytest = "^7.1.3"
ruff = "^0.0.265"

# Poe configuration
[tool.poe.tasks.build]
help = "Build docker container"
cmd = "docker build -t moltencore ."

[tool.poe.tasks.dev]
help = "Run the application in development mode"
cmd = "python main.py -l DEBUG --enable-rce"

[tool.poe.tasks.start]
help = "Run the application"
cmd = "python main.py"

[tool.poe.tasks.format]
help = "Format the code"
cmd = "black ."

[tool.poe.tasks.web]
help = "Run the web server"
cmd = "uvicorn web:app --reload"

[tool.poe.tasks.requirements]
help = "Export the requirements"
cmd = "poetry export -f requirements.txt --without-hashes"

[tool.poe.tasks.revision]
help = "Generate new alembic revision"
cmd = "alembic revision --autogenerate"

[tool.poe.tasks.migrate]
help = "Migrate the database"
cmd = "alembic upgrade head"

[tool.poe.tasks.rebuild]
help = "Migrate the database"
cmd = "docker build -t moltencore --no-cache ."

[tool.poe.tasks.test]
help = "Test the project"
cmd = "python -m pytest --ignore=plugins"

[tool.poe.tasks.dockertag]
help = "Test the project"
cmd = "docker tag moltencore:latest stax124/moltencore:latest"

[tool.poe.tasks.dockerpush]
help = "Test the project"
cmd = "docker push stax124/moltencore:latest"

[tool.poe.tasks.lint]
help = "Lint the project"
cmd = "ruff . --watch"

[tool.poe.tasks.memray]
help = "Run memray profiler"
cmd = "python -m memray main.py"

# Ruff configuration
[tool.ruff]
ignore = ["E501"]
fix = true

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

# Build configuration
[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
